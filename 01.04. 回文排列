回文串关于中心对称。其特点是除了长度为奇数的回文串中间的那个字符，其余字符若在前边出现一次，则必然在后边也出现一次。所以某个字符串若为回文串的一个排列，则其中至多有一个孤立的字符，其余字符应两两成对。
据此，可创建一个空集合，然后从头到尾扫描字符串。若扫描到的字符不在集合中，将其放入集合；若扫描到的字符在集合中，则可与其配成一对，为此从集合中移除该字符。
当扫描完字符串时，若集合中元素个数小于2（也就是集合为空或集合中只有一个元素），则该字符串中的所有字符可以构成一个回文串，也就是该字符串是回文串的一个排列。反之，则不是。

class Solution:
    def canPermutePalindrome(self, s: str) -> bool:
        res = set()
        for i in s:
            if i not in res:
                res.add(i)
            else:
                res.remove(i)
        return len(res) < 2
